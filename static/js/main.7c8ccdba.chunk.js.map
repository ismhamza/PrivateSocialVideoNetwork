{"version":3,"sources":["assets/icons/home.svg","assets/icons/home-colored.svg","assets/icons/search.svg","assets/icons/star-colored.svg","assets/icons/star.svg","assets/icons/wifi-colored.svg","assets/icons/wifi.svg","assets/icons/minus-circle-colored.svg","assets/icons/minus-circle.svg","assets/icons/open-menu.svg","containers/DefaultLayout/DefaultAside.js","containers/DefaultLayout/DefaultHeader.js","containers/DefaultLayout/DefaultLayout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DefaultAside","props","state","className","href","src","HomeIcon","alt","HomeIconColored","WifiIcon","WifiIconColored","EndedIcon","EndedIconColored","StarIcon","StarIconColored","Component","DefaultHeader","MenuIcon","DefaultLayout","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8IAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kD,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,6VCqE5BC,G,iBAtDb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,GAFI,E,sEAMjB,OACE,yBAAKC,UAAU,wBACb,yBAAKA,UAAU,6BACb,wBAAIA,UAAU,qBAAd,kBAEF,wBAAIA,UAAU,qBACZ,4BACE,uBAAGC,KAAK,SACN,0BAAMD,UAAU,+BACd,yBAAKA,UAAU,QAAQE,IAAKC,IAAUC,IAAI,SAC1C,yBAAKJ,UAAU,UAAUE,IAAKG,IAAiBD,IAAI,UAHvD,SAQF,4BACE,uBAAGH,KAAK,SACN,0BAAMD,UAAU,+BACd,yBAAKA,UAAU,QAAQE,IAAKI,IAAUF,IAAI,SAC1C,yBAAKJ,UAAU,UAAUE,IAAKK,IAAiBH,IAAI,UAHvD,SAQF,4BACE,uBAAGH,KAAK,SACN,0BAAMD,UAAU,+BACd,yBAAKA,UAAU,QAAQE,IAAKM,IAAWJ,IAAI,SAC3C,yBAAKJ,UAAU,UAAUE,IAAKO,IAAkBL,IAAI,UAHxD,UAQF,4BACE,uBAAGH,KAAK,SACN,0BAAMD,UAAU,+BACd,yBAAKA,UAAU,QAAQE,IAAKQ,IAAUN,IAAI,SAC1C,yBAAKJ,UAAU,UAAUE,IAAKS,IAAiBP,IAAI,UAHvD,oB,GAzCeQ,cCYZC,E,YApBb,WAAYf,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,GAFI,E,sEAMjB,OACE,yBAAKC,UAAU,uBACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,yBACb,uBAAGE,IAAI,SACP,yBAAKA,IAAKY,IAAUV,IAAI,iB,GAZRQ,aCmBbG,E,YAjBb,WAAYjB,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,GAFI,E,sEAMjB,OACE,yBAAKC,UAAU,eACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,kBACb,kBAAC,EAAD,Y,GAXkBY,a,MCMbI,MARf,WACE,OACE,yBAAKhB,UAAU,OACb,kBAAC,EAAD,QCKciB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.7c8ccdba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home.733358aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/home-colored.24686a97.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.5437e521.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-colored.adf2d898.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.a03ecccc.svg\";","module.exports = __webpack_public_path__ + \"static/media/wifi-colored.d6ea69da.svg\";","module.exports = __webpack_public_path__ + \"static/media/wifi.49bacdef.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus-circle-colored.69982495.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus-circle.b4879167.svg\";","module.exports = __webpack_public_path__ + \"static/media/open-menu.03f54db7.svg\";","import React, { Component } from \"react\";\r\nimport {\r\n  HomeIcon,\r\n  HomeIconColored,\r\n  WifiIcon,\r\n  WifiIconColored,\r\n  EndedIcon,\r\n  EndedIconColored,\r\n  StarIcon,\r\n  StarIconColored\r\n} from \"../../assets/icons\";\r\n\r\nimport \"./DefaultLayout.css\";\r\n\r\nclass DefaultAside extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"psvn-sidebar-wrapper\">\r\n        <div className=\"psvn-sidebar-logo-wrapper\">\r\n          <h1 className=\"psvn-sidebar-logo\">Video Network</h1>\r\n        </div>\r\n        <ul className=\"psvn-sidebar-list\">\r\n          <li>\r\n            <a href=\"#home\">\r\n              <span className=\"psvn-sidebar-list-item-icon\">\r\n                <img className=\"black\" src={HomeIcon} alt=\"home\" />\r\n                <img className=\"colored\" src={HomeIconColored} alt=\"home\" />\r\n              </span>\r\n              Home\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#home\">\r\n              <span className=\"psvn-sidebar-list-item-icon\">\r\n                <img className=\"black\" src={WifiIcon} alt=\"home\" />\r\n                <img className=\"colored\" src={WifiIconColored} alt=\"home\" />\r\n              </span>\r\n              Live\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#home\">\r\n              <span className=\"psvn-sidebar-list-item-icon\">\r\n                <img className=\"black\" src={EndedIcon} alt=\"home\" />\r\n                <img className=\"colored\" src={EndedIconColored} alt=\"home\" />\r\n              </span>\r\n              Ended\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#home\">\r\n              <span className=\"psvn-sidebar-list-item-icon\">\r\n                <img className=\"black\" src={StarIcon} alt=\"home\" />\r\n                <img className=\"colored\" src={StarIconColored} alt=\"home\" />\r\n              </span>\r\n              Favourite\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DefaultAside;\r\n","import React, { Component } from \"react\";\r\nimport { MenuIcon } from \"../../assets/icons\";\r\n\r\nimport \"./DefaultLayout.css\";\r\n\r\nclass DefaultHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"psvn-header-wrapper\">\r\n        <div className=\"psvn-header-left-section\">\r\n          <div className=\"psvn-header-menu-icon\">\r\n            <a src=\"#home\">\r\n            <img src={MenuIcon} alt=\"menu\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DefaultHeader;\r\n","import React, { Component } from \"react\";\r\nimport DefaultAside from \"./DefaultAside\";\r\nimport DefaultHeader from \"./DefaultHeader\";\r\n\r\nimport \"./DefaultLayout.css\";\r\n\r\nclass DefaultLayout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <DefaultAside />\r\n        <div className=\"psvn-main-view\">\r\n          <DefaultHeader />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DefaultLayout;\r\n","import React from \"react\";\nimport { DefaultLayout } from \"./containers/index\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DefaultLayout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}